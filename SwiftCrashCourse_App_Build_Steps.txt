Steps For Building the App

This is just a suggested list of steps to create the app.

1.) Create Project

2.) Create Layout in Interface Builder

3.) Create Backing Files for each View

4.) Add CocoaPods
	
	- This should add the KefKeychainWrapper pod(https://github.com/kefbytes/KeychainWrapper) used during login and the SwiftyJSON pod(google it) used later.

5.) Implement Login Functionality

	a. Create Login UI - Add these elements
		- "userID" TextField
		- "password" TextField
		- "Create Login" Button
		- "Login" Button
	b. Hook them up to LoginViewController (IBOutlets)
	
	c. Create Constants struct
	
	d. Display appropriate buttons accordingly
	
	e. Add static createLogin func in view model
	
6.) Create Core Data Stack

7.) Implement Add/Edit Account Functionality

8.) Hydrate TableView with Accounts

9.) Create API calls using NSURLSession

		http://api.openweathermap.org/data/2.5/weather?q=charlotte&APPID=b4babdf7c4fc57ccb46e80d1bbf8d6cb
	
	// add to podfile
	pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git'


10.) Create API Call to Weather API

	http://api.openweathermap.org/data/2.5/weather?q=charlotte&APPID=b4babdf7c4fc57ccb46e80d1bbf8d6cb
	
	You may need to create your own APPID for Open Weather if the above doesn't work. Try it in something like Postman to find out.

	You will need to add this to the info.plist file(click the plus sign).
		App Transport Security Settings as a Dictionary
	And then add this to the dictionary (it will probably do so for you when you click the plus sign).
		Allow Arbitrary Loads
	Set the value to YES.

11.) Decode JSON from Weather API

12.) Display weather data on login view
